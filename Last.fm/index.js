(function(s,f,m,n,u,L,g,S,A){"use strict";const o={DEFAULT_APP_NAME:"Music",DEFAULT_TIME_INTERVAL:5,APPLICATION_ID:"1054951789318909972",LFM_API_KEY:"615322f0047e12aedbc610d9d71f7430",LFM_DEFAULT_COVER_HASHES:["2a96cbd8b46e442fc41c2b86b821562f","c6f59c1e5e7240a4c0d427abd71f3dbb"]};async function P(){const e=new URLSearchParams({method:"user.getrecenttracks",user:l.username,api_key:o.LFM_API_KEY,format:"json",limit:"1",extended:"1"}).toString(),r=await fetch(`https://ws.audioscrobbler.com/2.0/?${e}`).then(c=>{if(!c.ok)throw new Error(`Failed to fetch latest scrobble: ${c.status} ${c.statusText}`);return c.json()}),a=r.recenttracks?.track?.[0]||Promise.reject(r);return{name:a.name,artist:a.artist.name,album:a.album["#text"],albumArt:R(a.image[3]["#text"]),url:a.url,date:a.date?.["#text"]??"now",nowPlaying:Boolean(a["@attr"]?.nowplaying),loved:a.loved==="1"}}function R(e){return o.LFM_DEFAULT_COVER_HASHES.some(r=>e.includes(r))?null:e}async function b(e){return t.stopped&&(console.log("--> Plugin is unloaded, aborting..."),t.updateInterval&&clearInterval(t.updateInterval),e=null),t.lastActivity=e,await _.handler({isSocketConnected:()=>!0,socket:{id:120,application:{id:o.APPLICATION_ID,name:e?.name||"RichPresence"},transport:"ipc"},args:{pid:120,activity:e&&{...e}||null}})}function d(){return t.lastActivity&&i("--> Clearing activity..."),b(null)}async function E(){if(i("--> Fetching last track..."),!l.username)throw A.showToast("Last.fm username is not set!",g.getAssetIDByName("Small")),await y(),new Error("Username is not set");const e=await P().catch(async function(c){throw i("--> An error occurred while fetching the last track, aborting..."),await d().catch(),c});if(!e.nowPlaying)return i("--> Last track is not currently playing, aborting..."),await d();if(i("--> Track fetched! Setting activity..."),t.lastTrackUrl===e.url){i("--> Last track is the same as the previous one, aborting...");return}const r={name:l.appName||o.DEFAULT_APP_NAME,type:l.listeningTo?2:0,details:e.name,state:`by ${e.artist}`};t.lastTrackUrl=e.url,l.showTimestamp&&(r.timestamps={start:Date.now()/1e3|0}),e.album&&(r.assets={large_image:e.albumArt,large_text:`on ${e.album}`});const a=await b(r).catch(async function(c){throw i("--> An error occurred while setting the activity"),await d().catch(),c});return i("--> Successfully set activity!"),i(a),a}function y(){return console.log("--> Flushing..."),t.lastActivity=null,t.updateInterval&&clearInterval(t.updateInterval),d()}async function h(){if(console.log("--> Initializing..."),t.stopped)throw new Error("Plugin is already stopped!");t.lastTrackUrl=null,t.updateInterval&&clearInterval(t.updateInterval),t.lastActivity&&await d();let e=0;E().catch(r=>{console.error(r),e++}),t.updateInterval=setInterval(()=>E().then(()=>e=0).catch(r=>{console.error(r),++e>3&&(console.error("Failed to fetch/set activity 3 times, aborting..."),clearInterval(t.updateInterval),t.stopped=!0)}),(l.timeInterval||o.DEFAULT_TIME_INTERVAL)*1e3)}function F(){t.activityTypeUnpatch&&(console.warn("This is weird... activity type override is already defined?"),t.activityTypeUnpatch()),console.log("Patching activity type...");const e=Object.values(n.FluxDispatcher._actionHandlers._dependencyGraph.nodes),{actionHandler:r}=e.find(a=>a.name==="LocalActivityStore");return f.patcher.before("LOCAL_ACTIVITY_UPDATE",r,([{activity:a}])=>{a&&a.name===t.lastActivity.name&&(a.type=t.lastActivity.type)})}const{ScrollView:N,TouchableOpacity:U,Text:C}=n.ReactNative,{FormInput:I,FormDivider:p,FormSwitchRow:v,FormText:D,FormIcon:T}=S.Forms;function k(){async function e(){for(const r in u.storage)(typeof u.storage[r]=="boolean"||u.storage[r])&&(l[r]=u.storage[r]);console.log("Applying settings..."),await y(),await h(),A.showToast("Settings updated!",g.getAssetIDByName("Check"))}return n.React.createElement(U,{onPress:e},n.React.createElement(D,{style:{marginRight:12}},"UPDATE"))}function V(){const e=L.useProxy(u.storage),r=n.NavigationNative.useNavigation();return n.React.useEffect(()=>{r.setOptions({title:"Last.fm Configuration",headerRight:k})},[]),n.React.createElement(N,null,n.React.createElement(I,{value:e.appName||void 0,onChangeText:a=>e.appName=a.trim(),title:"Discord Application Name",placeholder:o.DEFAULT_APP_NAME,returnKeyType:"done"}),n.React.createElement(p,null),n.React.createElement(I,{required:!0,value:e.username||void 0,onChangeText:a=>e.username=a.trim(),title:"Last.fm username",helpText:!e.username&&n.React.createElement(C,{style:{color:"#FF0000"}},"This field is required!"),placeholder:"wumpus123",returnKeyType:"done"}),n.React.createElement(p,null),n.React.createElement(v,{label:"Show time elapsed",subLabel:"Show the time elapsed since the song started playing",leading:n.React.createElement(T,{source:g.getAssetIDByName("clock")}),value:e.showTimestamp,onValueChange:a=>e.showTimestamp=a}),n.React.createElement(p,null),n.React.createElement(v,{label:"Set status as listening",subLabel:'Set your status as "Listening to" instead of "Playing"',leading:n.React.createElement(T,{source:g.getAssetIDByName("ic_headset_neutral")}),value:e.listeningTo,onValueChange:a=>e.listeningTo=a}),n.React.createElement(p,null),n.React.createElement(v,{label:"Verbose logging",subLabel:"Log more information to the console for debugging purposes",leading:n.React.createElement(T,{source:g.getAssetIDByName("pencil")}),value:e.verboseLogging,onValueChange:a=>e.verboseLogging=a}))}const t={},l={...f.plugin.storage},w=m.findByStoreName("UserStore"),_=m.findByProps("SET_ACTIVITY").SET_ACTIVITY,i=(...e)=>l.verboseLogging&&console.log(...e);var O={onLoad:()=>{console.log("Starting last.fm plugin.."),t.activityTypeUnpatch=F(),t.stopped=!1,w.getCurrentUser()&&(console.log("User is already logged in, initializing..."),h().catch(console.error)),n.FluxDispatcher.subscribe("CONNECTION_OPEN",()=>{h().catch(console.error)})},onUnload:()=>{console.log("Stopping last.fm..."),t.stopped=!0,y(),t.activityTypeUnpatch?.(),t.activityTypeUnpatch=null},settings:V};return s.SET_ACTIVITY=_,s.UserStore=w,s.currentSettings=l,s.default=O,s.global=t,s.verboseLog=i,Object.defineProperty(s,"__esModule",{value:!0}),s})({},vendetta,vendetta.metro,vendetta.metro.common,vendetta.plugin,vendetta.storage,vendetta.ui.assets,vendetta.ui.components,vendetta.ui.toasts);
